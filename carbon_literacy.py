# -*- coding: utf-8 -*-
"""carbon_literacy.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1MwWXCuNAdQ_a9EMCow2JED4orgUFqUHa
"""

# Install required packages
!pip install pandas openpyxl

import pandas as pd
import numpy as np
import re
from google.colab import files

# Upload file
uploaded = files.upload()

# Load the Excel file
data = pd.read_excel('pph_first_table.xlsx')

# Rename columns for easier access
data.columns = ['KPI_Area', 'Global_Benchmark', 'Pre_Training', 'Post_Training', 'Estimated_Carbon_Reduction', 'Revenue_Impact']

# Clean KPI_Area column
data['KPI_Area'] = data['KPI_Area'].str.strip().str.lower()
data['KPI_Area'] = data['KPI_Area'].apply(lambda x: re.sub(r'\s*\(.*?\)', '', x)).astype('category')

# Function to extract percentage savings
def extract_percentage(text):
    match = re.search(r'\d+%-\d+%|\d+%', text)
    return match.group(0) if match else None

# Clean Global_Benchmark column
data['Global_Benchmark'] = data['Global_Benchmark'].str.strip().str.lower()
data['Global_Benchmark'] = data['Global_Benchmark'].apply(lambda x: re.sub(r'\s*\(.*?\)', '', x))
data['percentage_savings'] = data['Global_Benchmark'].apply(extract_percentage)
data['Global_Benchmark'] = data['Global_Benchmark'].apply(lambda x: re.sub(r'\d+%-\d+%|\d+%', '', x).strip())

# Clean Pre_Training column
data['Pre_Training'] = data['Pre_Training'].str.strip().str.lower()
data['Pre_Training'] = data['Pre_Training'].apply(lambda x: re.sub(r'\s*\(.*?\)', '', x))

# Clean Post_Training column and extract percentage
data['Post_Training'] = data['Post_Training'].str.strip().str.lower()
data['Post_Training_Percentage'] = data['Post_Training'].apply(extract_percentage)

# Apply cleaning function to Post_Training
def clean_text(text):
    percentage = extract_percentage(text)
    cleaned_text = re.sub(r'\s*\(.*?\)', '', text)  # Remove text in parentheses
    cleaned_text = re.sub(r'\d+%-\d+%|\d+%', '', cleaned_text).strip()  # Remove percentage
    return cleaned_text, percentage

# This will split into two columns
data[['Post_Training', 'Post_Training_Percentage']] = data['Post_Training'].apply(
    lambda x: pd.Series(clean_text(x))
)

# Clean Estimated_Carbon_Reduction column and extract percentage
data['Estimated_Carbon_Reduction'] = data['Estimated_Carbon_Reduction'].str.strip().str.lower()
data['Estimated_Carbon_Reduction_percentage'] = data['Estimated_Carbon_Reduction'].apply(extract_percentage)

# Apply cleaning function to Estimated_Carbon_Reduction
data[['Estimated_Carbon_Reduction', 'Estimated_Carbon_Reduction_percentage']] = data['Estimated_Carbon_Reduction'].apply(
    lambda x: pd.Series(clean_text(x)))

data = data.drop('Estimated_Carbon_Reduction', axis=1)

# Clean Revenue_Impact column
data['Revenue_Impact'] = data['Revenue_Impact'].str.strip().str.lower()
data['Revenue_Impact'] = data['Revenue_Impact'].apply(lambda x: x.split(':')[0].strip())

data = data.replace(r'\.', '', regex=True)

# Display the cleaned DataFrame
data.head()

from google.colab import files

# Assuming 'data' is your final DataFrame
data.to_csv('final_dataframe.csv', index=False)  # Save as CSV without the index

# Download the file
files.download('final_dataframe.csv')





data.head()